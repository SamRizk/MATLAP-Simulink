
Led_test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000100  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000a8  00800060  00000100  00000194  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  00800108  00800108  0000023c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000023c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000026c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  000002a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000791  00000000  00000000  000002d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000635  00000000  00000000  00000a61  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000023b  00000000  00000000  00001096  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000034  00000000  00000000  000012d4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003d9  00000000  00000000  00001308  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000004c  00000000  00000000  000016e1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  0000172d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	11 e0       	ldi	r17, 0x01	; 1
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 e0       	ldi	r30, 0x00	; 0
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a8 30       	cpi	r26, 0x08	; 8
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	21 e0       	ldi	r18, 0x01	; 1
  78:	a8 e0       	ldi	r26, 0x08	; 8
  7a:	b1 e0       	ldi	r27, 0x01	; 1
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ae 30       	cpi	r26, 0x0E	; 14
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 7e 00 	jmp	0xfc	; 0xfc <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
   * period 0.2 seconds (the model's base sample time) here.  The
   * call syntax for rt_OneStep is
   *
   *  rt_OneStep();
   */
  printf("Warning: The simulation will run forever. "
  92:	88 e6       	ldi	r24, 0x68	; 104
  94:	90 e0       	ldi	r25, 0x00	; 0
  96:	0e 94 4e 00 	call	0x9c	; 0x9c <puts>
  9a:	ff cf       	rjmp	.-2      	; 0x9a <main+0x8>

0000009c <puts>:
  9c:	0f 93       	push	r16
  9e:	1f 93       	push	r17
  a0:	cf 93       	push	r28
  a2:	df 93       	push	r29
  a4:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <__data_end+0x2>
  a8:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <__data_end+0x3>
  ac:	23 81       	ldd	r18, Z+3	; 0x03
  ae:	21 ff       	sbrs	r18, 1
  b0:	1b c0       	rjmp	.+54     	; 0xe8 <puts+0x4c>
  b2:	8c 01       	movw	r16, r24
  b4:	d0 e0       	ldi	r29, 0x00	; 0
  b6:	c0 e0       	ldi	r28, 0x00	; 0
  b8:	f8 01       	movw	r30, r16
  ba:	81 91       	ld	r24, Z+
  bc:	8f 01       	movw	r16, r30
  be:	60 91 0a 01 	lds	r22, 0x010A	; 0x80010a <__data_end+0x2>
  c2:	70 91 0b 01 	lds	r23, 0x010B	; 0x80010b <__data_end+0x3>
  c6:	db 01       	movw	r26, r22
  c8:	18 96       	adiw	r26, 0x08	; 8
  ca:	ed 91       	ld	r30, X+
  cc:	fc 91       	ld	r31, X
  ce:	19 97       	sbiw	r26, 0x09	; 9
  d0:	88 23       	and	r24, r24
  d2:	31 f0       	breq	.+12     	; 0xe0 <puts+0x44>
  d4:	09 95       	icall
  d6:	89 2b       	or	r24, r25
  d8:	79 f3       	breq	.-34     	; 0xb8 <puts+0x1c>
  da:	df ef       	ldi	r29, 0xFF	; 255
  dc:	cf ef       	ldi	r28, 0xFF	; 255
  de:	ec cf       	rjmp	.-40     	; 0xb8 <puts+0x1c>
  e0:	8a e0       	ldi	r24, 0x0A	; 10
  e2:	09 95       	icall
  e4:	89 2b       	or	r24, r25
  e6:	19 f0       	breq	.+6      	; 0xee <puts+0x52>
  e8:	8f ef       	ldi	r24, 0xFF	; 255
  ea:	9f ef       	ldi	r25, 0xFF	; 255
  ec:	02 c0       	rjmp	.+4      	; 0xf2 <puts+0x56>
  ee:	8d 2f       	mov	r24, r29
  f0:	9c 2f       	mov	r25, r28
  f2:	df 91       	pop	r29
  f4:	cf 91       	pop	r28
  f6:	1f 91       	pop	r17
  f8:	0f 91       	pop	r16
  fa:	08 95       	ret

000000fc <_exit>:
  fc:	f8 94       	cli

000000fe <__stop_program>:
  fe:	ff cf       	rjmp	.-2      	; 0xfe <__stop_program>
